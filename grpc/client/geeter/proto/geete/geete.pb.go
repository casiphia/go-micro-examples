// Code generated by protoc-gen-go. DO NOT EDIT.
// source: geete.proto

package geete

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Message struct {
	Say                  string   `protobuf:"bytes,1,opt,name=say,proto3" json:"say"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" gorm:"-"`
	XXX_unrecognized     []byte   `json:"-" gorm:"-"`
	XXX_sizecache        int32    `json:"-" gorm:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bcf6ddf9a13acac, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetSay() string {
	if m != nil {
		return m.Say
	}
	return ""
}

type Request struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" gorm:"-"`
	XXX_unrecognized     []byte   `json:"-" gorm:"-"`
	XXX_sizecache        int32    `json:"-" gorm:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bcf6ddf9a13acac, []int{1}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Response struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" gorm:"-"`
	XXX_unrecognized     []byte   `json:"-" gorm:"-"`
	XXX_sizecache        int32    `json:"-" gorm:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bcf6ddf9a13acac, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type StreamingRequest struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" gorm:"-"`
	XXX_unrecognized     []byte   `json:"-" gorm:"-"`
	XXX_sizecache        int32    `json:"-" gorm:"-"`
}

func (m *StreamingRequest) Reset()         { *m = StreamingRequest{} }
func (m *StreamingRequest) String() string { return proto.CompactTextString(m) }
func (*StreamingRequest) ProtoMessage()    {}
func (*StreamingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bcf6ddf9a13acac, []int{3}
}

func (m *StreamingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingRequest.Unmarshal(m, b)
}
func (m *StreamingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingRequest.Marshal(b, m, deterministic)
}
func (m *StreamingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingRequest.Merge(m, src)
}
func (m *StreamingRequest) XXX_Size() int {
	return xxx_messageInfo_StreamingRequest.Size(m)
}
func (m *StreamingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingRequest proto.InternalMessageInfo

func (m *StreamingRequest) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type StreamingResponse struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" gorm:"-"`
	XXX_unrecognized     []byte   `json:"-" gorm:"-"`
	XXX_sizecache        int32    `json:"-" gorm:"-"`
}

func (m *StreamingResponse) Reset()         { *m = StreamingResponse{} }
func (m *StreamingResponse) String() string { return proto.CompactTextString(m) }
func (*StreamingResponse) ProtoMessage()    {}
func (*StreamingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bcf6ddf9a13acac, []int{4}
}

func (m *StreamingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingResponse.Unmarshal(m, b)
}
func (m *StreamingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingResponse.Marshal(b, m, deterministic)
}
func (m *StreamingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingResponse.Merge(m, src)
}
func (m *StreamingResponse) XXX_Size() int {
	return xxx_messageInfo_StreamingResponse.Size(m)
}
func (m *StreamingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingResponse proto.InternalMessageInfo

func (m *StreamingResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Ping struct {
	Stroke               int64    `protobuf:"varint,1,opt,name=stroke,proto3" json:"stroke"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" gorm:"-"`
	XXX_unrecognized     []byte   `json:"-" gorm:"-"`
	XXX_sizecache        int32    `json:"-" gorm:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bcf6ddf9a13acac, []int{5}
}

func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (m *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(m, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

func (m *Ping) GetStroke() int64 {
	if m != nil {
		return m.Stroke
	}
	return 0
}

type Pong struct {
	Stroke               int64    `protobuf:"varint,1,opt,name=stroke,proto3" json:"stroke"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" gorm:"-"`
	XXX_unrecognized     []byte   `json:"-" gorm:"-"`
	XXX_sizecache        int32    `json:"-" gorm:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bcf6ddf9a13acac, []int{6}
}

func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (m *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(m, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func (m *Pong) GetStroke() int64 {
	if m != nil {
		return m.Stroke
	}
	return 0
}

func init() {
	proto.RegisterType((*Message)(nil), "geete.Message")
	proto.RegisterType((*Request)(nil), "geete.Request")
	proto.RegisterType((*Response)(nil), "geete.Response")
	proto.RegisterType((*StreamingRequest)(nil), "geete.StreamingRequest")
	proto.RegisterType((*StreamingResponse)(nil), "geete.StreamingResponse")
	proto.RegisterType((*Ping)(nil), "geete.Ping")
	proto.RegisterType((*Pong)(nil), "geete.Pong")
}

func init() { proto.RegisterFile("geete.proto", fileDescriptor_5bcf6ddf9a13acac) }

var fileDescriptor_5bcf6ddf9a13acac = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x4d, 0x4a, 0x03, 0x41,
	0x10, 0x85, 0xd3, 0x64, 0x32, 0x89, 0x15, 0xd0, 0x58, 0x88, 0x86, 0xf1, 0x07, 0xe9, 0xd5, 0xc4,
	0x45, 0x08, 0x7a, 0x00, 0x17, 0x2e, 0x5c, 0x09, 0x32, 0x9e, 0xa0, 0x95, 0xa2, 0x09, 0x66, 0xba,
	0x63, 0x57, 0x67, 0xe1, 0x6d, 0x3c, 0xaa, 0xf4, 0xcf, 0x0c, 0xa2, 0x66, 0x57, 0x6f, 0xbe, 0xf7,
	0x8a, 0x57, 0xd3, 0x30, 0xd5, 0x44, 0x9e, 0x96, 0x5b, 0x67, 0xbd, 0xc5, 0x51, 0x14, 0xf2, 0x1c,
	0xc6, 0x4f, 0xc4, 0xac, 0x34, 0xe1, 0x0c, 0x86, 0xac, 0x3e, 0xe7, 0xe2, 0x5a, 0xd4, 0x07, 0x4d,
	0x18, 0xe5, 0x25, 0x8c, 0x1b, 0xfa, 0xd8, 0x11, 0x7b, 0x44, 0x28, 0x8c, 0x6a, 0x29, 0xd3, 0x38,
	0xcb, 0x0b, 0x98, 0x34, 0xc4, 0x5b, 0x6b, 0x38, 0x86, 0x5b, 0xd6, 0x5d, 0xb8, 0x65, 0x2d, 0x6b,
	0x98, 0xbd, 0x78, 0x47, 0xaa, 0x5d, 0x1b, 0xdd, 0x6d, 0x39, 0x81, 0xd1, 0x9b, 0xdd, 0x19, 0x1f,
	0x7d, 0xc3, 0x26, 0x09, 0xb9, 0x80, 0xe3, 0x1f, 0xce, 0xbc, 0xf0, 0x7f, 0xeb, 0x15, 0x14, 0xcf,
	0x6b, 0xa3, 0xf1, 0x14, 0x4a, 0xf6, 0xce, 0xbe, 0x53, 0xc6, 0x59, 0x45, 0x6e, 0xf7, 0xf3, 0xdb,
	0x2f, 0x01, 0xe5, 0x63, 0x38, 0xdc, 0xe1, 0x02, 0x8a, 0x07, 0xb5, 0xd9, 0xe0, 0xe1, 0x32, 0xfd,
	0x96, 0xdc, 0xb1, 0x3a, 0xea, 0x75, 0x6a, 0x22, 0x07, 0x78, 0x0f, 0x65, 0x2a, 0x88, 0x67, 0x19,
	0xfe, 0xbe, 0xac, 0x9a, 0xff, 0x05, 0x5d, 0x7c, 0x25, 0xf0, 0x06, 0x26, 0xa1, 0x76, 0xac, 0x36,
	0xcd, 0xce, 0xf0, 0xa1, 0xea, 0x85, 0x35, 0x5a, 0x0e, 0x6a, 0xb1, 0x12, 0xaf, 0x65, 0x7c, 0x9f,
	0xbb, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe8, 0xae, 0x67, 0x67, 0xae, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GeeterClient is the client API for Geeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GeeterClient interface {
	Call(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	Stream(ctx context.Context, in *StreamingRequest, opts ...grpc.CallOption) (Geeter_StreamClient, error)
	PingPong(ctx context.Context, opts ...grpc.CallOption) (Geeter_PingPongClient, error)
}

type geeterClient struct {
	cc *grpc.ClientConn
}

func NewGeeterClient(cc *grpc.ClientConn) GeeterClient {
	return &geeterClient{cc}
}

func (c *geeterClient) Call(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/geete.Geeter/Call", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *geeterClient) Stream(ctx context.Context, in *StreamingRequest, opts ...grpc.CallOption) (Geeter_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Geeter_serviceDesc.Streams[0], "/geete.Geeter/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &geeterStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Geeter_StreamClient interface {
	Recv() (*StreamingResponse, error)
	grpc.ClientStream
}

type geeterStreamClient struct {
	grpc.ClientStream
}

func (x *geeterStreamClient) Recv() (*StreamingResponse, error) {
	m := new(StreamingResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *geeterClient) PingPong(ctx context.Context, opts ...grpc.CallOption) (Geeter_PingPongClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Geeter_serviceDesc.Streams[1], "/geete.Geeter/PingPong", opts...)
	if err != nil {
		return nil, err
	}
	x := &geeterPingPongClient{stream}
	return x, nil
}

type Geeter_PingPongClient interface {
	Send(*Ping) error
	Recv() (*Pong, error)
	grpc.ClientStream
}

type geeterPingPongClient struct {
	grpc.ClientStream
}

func (x *geeterPingPongClient) Send(m *Ping) error {
	return x.ClientStream.SendMsg(m)
}

func (x *geeterPingPongClient) Recv() (*Pong, error) {
	m := new(Pong)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GeeterServer is the server API for Geeter service.
type GeeterServer interface {
	Call(context.Context, *Request) (*Response, error)
	Stream(*StreamingRequest, Geeter_StreamServer) error
	PingPong(Geeter_PingPongServer) error
}

// UnimplementedGeeterServer can be embedded to have forward compatible implementations.
type UnimplementedGeeterServer struct {
}

func (*UnimplementedGeeterServer) Call(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Call not implemented")
}
func (*UnimplementedGeeterServer) Stream(req *StreamingRequest, srv Geeter_StreamServer) error {
	return status.Errorf(codes.Unimplemented, "method Stream not implemented")
}
func (*UnimplementedGeeterServer) PingPong(srv Geeter_PingPongServer) error {
	return status.Errorf(codes.Unimplemented, "method PingPong not implemented")
}

func RegisterGeeterServer(s *grpc.Server, srv GeeterServer) {
	s.RegisterService(&_Geeter_serviceDesc, srv)
}

func _Geeter_Call_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GeeterServer).Call(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/geete.Geeter/Call",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GeeterServer).Call(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Geeter_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamingRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GeeterServer).Stream(m, &geeterStreamServer{stream})
}

type Geeter_StreamServer interface {
	Send(*StreamingResponse) error
	grpc.ServerStream
}

type geeterStreamServer struct {
	grpc.ServerStream
}

func (x *geeterStreamServer) Send(m *StreamingResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Geeter_PingPong_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GeeterServer).PingPong(&geeterPingPongServer{stream})
}

type Geeter_PingPongServer interface {
	Send(*Pong) error
	Recv() (*Ping, error)
	grpc.ServerStream
}

type geeterPingPongServer struct {
	grpc.ServerStream
}

func (x *geeterPingPongServer) Send(m *Pong) error {
	return x.ServerStream.SendMsg(m)
}

func (x *geeterPingPongServer) Recv() (*Ping, error) {
	m := new(Ping)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Geeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "geete.Geeter",
	HandlerType: (*GeeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Call",
			Handler:    _Geeter_Call_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _Geeter_Stream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "PingPong",
			Handler:       _Geeter_PingPong_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "geete.proto",
}
